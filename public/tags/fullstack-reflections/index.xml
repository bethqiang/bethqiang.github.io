<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fullstack Reflections on Beth Qiang</title>
    <link>http://bethqiang.com/tags/fullstack-reflections/index.xml</link>
    <description>Recent content in Fullstack Reflections on Beth Qiang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://bethqiang.com/tags/fullstack-reflections/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Junior Phase in Review</title>
      <link>http://bethqiang.com/blog/2016/12/14/fullstack-academy-junior-phase-in-review/</link>
      <pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/12/14/fullstack-academy-junior-phase-in-review/</guid>
      <description>

&lt;p&gt;We&amp;rsquo;re six and a half weeks in, which also means we&amp;rsquo;re halfway done with Fullstack Academy. It&amp;rsquo;s still a little crazy to think about, and I&amp;rsquo;ve been having a little bit of trouble processing this in its entirety. In some ways, I feel like it was a week ago that we started, fresh-eyed, strangers to each other and the enormous world of programming, and eager to absorb the firehose of information that was about to be thrown at us. In other ways, I feel like it&amp;rsquo;s been many months – we&amp;rsquo;ve learned and done so much, we&amp;rsquo;ve gotten to know each other and each other&amp;rsquo;s pets very well, we&amp;rsquo;ve settled into a little bit of a routine, and we&amp;rsquo;re all a little tired and very ready for a break.&lt;/p&gt;

&lt;h2 id=&#34;the-giant-list-of-what-we-ve-learned-and-the-general-learning-experience&#34;&gt;The Giant List of What We&amp;rsquo;ve Learned, and the General Learning Experience&lt;/h2&gt;

&lt;p&gt;Throughout the journey, we&amp;rsquo;ve consistently built upon the basic fundamentals we covered in Foundations: scope and closure, prototypes and inheritance, first-class functions, and higher-order functions.&lt;/p&gt;

&lt;p&gt;We covered the backend with Node, Express, SQL, Sequelize, and Postgres, the frontend with CSS/SASS, jQuery, web sockets, React, and Redux, and everything in between. We attempted to wrap our minds around data structures and algorithms, promises, testing, more promises, object-oriented and functional programming paradigms, the event loop and call stack, and how THE WHOLE INTERNET works (okay, maybe not the whole internet, but things like DNS, TCP/IP, HTTP, how browsers work, and cookies and sessions).&lt;/p&gt;

&lt;p&gt;Fullstack and our instructors have placed an enormous emphasis on taking our time to really, truly, understand what&amp;rsquo;s happening, why, and how things work under-the-hood, under all of the abstractions that a lot of our tools create. One of my instructors&amp;rsquo; favorite questions to answer is, &amp;ldquo;This is working, but we have no idea why&amp;hellip;?&amp;rdquo; We built our own bash shells, promise libraries, CSS libraries, and trip planning apps. We cloned Wikipedia, Twitter, and Spotify across the stack, from creating databases to gently and considerately fighting with React. In our CS Saturdays, we learned about and built compilers and parsers, database querying languages and ORMs, git and immutability and our own basic version control systems, machine learning, and cryptography.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve become whiz kids at using Chrome dev tools, collaborating with others on programming projects, breaking problems down into manageable pieces, trying things and failing, and making Slack emojis. (#theimportantthings) We&amp;rsquo;ve learned how to become more compassionate programmers and people and citizens of the world.&lt;/p&gt;

&lt;p&gt;Fullstack is constantly iterating on its curriculum, trying to keep it up-to-date, relevant, and challenging for its students. &lt;a href=&#34;https://www.fullstackacademy.com/blog/angular-to-react-fullstack-academy-updates-its-curriculum&#34; target=&#34;_blank&#34;&gt;They&amp;rsquo;ve recently made a shift from teaching Angular to teaching React&lt;/a&gt;, and some instructors are right along with us in being relative newcomers to React, so in some cases, we&amp;rsquo;re learning together, which can be both a frustrating and humbling experience when someone you look to as a source of guidance says, &amp;ldquo;You know what? I actually have no idea.&amp;rdquo; There are enough people who know React (and various other aspects of the programming world) well enough though that if someone doesn&amp;rsquo;t know something, someone else definitely will. (Or at least, has the knowledge to figure it out!)&lt;/p&gt;

&lt;h2 id=&#34;the-remote-experience&#34;&gt;The Remote Experience&lt;/h2&gt;

&lt;p&gt;Going into the Remote Immersive, I wasn&amp;rsquo;t sure what to expect of the experience in general. Innately, being remote has its challenges. Some of the in-person instructors and students, understandably, aren&amp;rsquo;t used to worrying about accommodating the remote cohort day-to-day, and sometimes they&amp;rsquo;ll forget small things like needing to talk into a mic in order for us to hear them during CS Saturday lectures. We&amp;rsquo;ve had our fair share of technical hiccups when it comes to using the software and technology that we do to make our experience possible. And as much as I&amp;rsquo;d absolutely love to, I can&amp;rsquo;t go out to dinner with my cohort or attend meetups with them on weekends or do happy hour after a long day of class.&lt;/p&gt;

&lt;p&gt;But, as a cohort, we&amp;rsquo;ve gotten to bond in other ways. Like accidentally forgetting to mute our mics and yelling across the room to a family member. Or having your kids pop in and out of your video frame, curious about what you&amp;rsquo;re doing. Or having your cat hop onto your desk right in front of your camera. Or having glitches in our video software, which momentarily makes your instructor sound like a demon. Or fighting with YouTube bots during our live streams of CS Saturdays.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve done Hot Seat, during which we got to know each other on a deeper level than just pair programming and working with them. (Although, it&amp;rsquo;s arguable that when you&amp;rsquo;ve spent 2.5 hours trying to write a single test or you&amp;rsquo;ve spent the better part of 2 days wrestling with jQuery on a fairly complex app with someone, you&amp;rsquo;ve gotten to know a side of them very, very well!) We&amp;rsquo;ve done game nights, during which people fell off of the Minecraft world and one of Fullstack&amp;rsquo;s founders discovered the joys of TNT, and also during which one of our fellows reached 2+ million points in a game and kept eating everyone else. We&amp;rsquo;ve had learning group lunches, where we talked about space exploration and the headaches that D3 can cause with smaller groups and our fellow.&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t pretend like everyone in my cohort are the best friends I&amp;rsquo;ve ever made, and we&amp;rsquo;d almost certainly be closer if we were in-person with each other every day. But I know, at the very least, that I&amp;rsquo;ve found some very close friends, that our cohort will maintain connections with each other as we go through our personal programming journeys, and that I&amp;rsquo;ll always have a solid group of people I know I can always depend on, vento to, and ask for help and advice.&lt;/p&gt;

&lt;h2 id=&#34;the-fullstack-experience-as-a-student-growing-developer-and-woman&#34;&gt;The Fullstack Experience as a Student, Growing Developer, and Woman&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve said this before, but I think it&amp;rsquo;s absolutely, 110% worth repeating: Fullstack has been nothing short of amazing. Their dedication to creating a safe, open, accessible, but challenging learning experience for each and every one of their students was obvious from week 1. When big things have happened in our world and our lives, Fullstack set aside extra time in our and their days so that we can talk about it.&lt;/p&gt;

&lt;p&gt;Fullstack&amp;rsquo;s instructors and fellows have made themselves 110% accessible at most hours of the day for anything – whether we have questions about the material, or are struggling with a concept, or want advice on a personal project, or are feeling a little down about being a woman in our world, or literally anything else, programming-related or not. Even instructors and engineers who aren&amp;rsquo;t officially associated with our cohort have pitched in via Slack to help us out with not only understanding concepts, but also with things like setting up linters and combing through style guides.&lt;/p&gt;

&lt;p&gt;Fullstack&amp;rsquo;s students are no less amazing: every single person I&amp;rsquo;ve met, talked to, and worked with has been incredibly intelligent, driven, and passionate, whether it be about virtual reality, or backend frameworks, or puppies. (Or all of the above?) Regardless of where students are in the journey, no one looks down upon anyone for not knowing as much about a given area of the programming world. We all understand that we&amp;rsquo;re here to learn, and everyone&amp;rsquo;s more than willing to help each other and learning alongside each other as much as we possibly can.&lt;/p&gt;

&lt;p&gt;In the six weeks I&amp;rsquo;ve been at Fullstack, I&amp;rsquo;ve also done two hackathons that were completely organized by Fullstack, for Fullstack. The first of these was for our cohort, as a way to unwind after one of our checkpoints. We had been fiddling around with Minecraft for some game nights, so we did a ScriptCraft hackathon – using only JavaScript, we had to create something cool in the Minecraft world using the ScriptCraft plugin.&lt;/p&gt;

&lt;p&gt;The second of these happened just yesterday, and was dubbed a &amp;ldquo;Coding for Good&amp;rdquo;/&amp;ldquo;Holiday Hackathon,&amp;rdquo; with the goal of finding a social good problem that we were passionate about, and creating a solution to solve it. A lot of really cool ideas were built and deployed, from a Chrome extension that would prompt you to donate to a charity if you were shopping online or reading a news article about a disaster somewhere in the world, to an app that can connect people who need food with restaurants that have food about to expire or that&amp;rsquo;s going to be thrown away, to an app where &amp;ldquo;Tinder meets volunteering.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;I wanted to make a special note when it comes to being a woman at Fullstack. Consistent with Fullstack&amp;rsquo;s mission, values, and goals, I have never once felt like I&amp;rsquo;ve been looked down upon or otherwise treated unfairly because of my gender. While at Fullstack, I&amp;rsquo;ve never been self-conscious about the fact that I&amp;rsquo;m a woman – I&amp;rsquo;ve always considered myself &amp;ldquo;just another Fullstack student.&amp;rdquo; It definitely helps that out of my 13-person cohort, five of us, and one of our fellows, are women, and there&amp;rsquo;s an incredibly strong support system for women in the Fullstack community across all campuses.&lt;/p&gt;

&lt;p&gt;As a student, a learning and growing developer who sometimes makes very rookie mistakes, a person of color, and a woman, I&amp;rsquo;ve been welcomed into the Fullstack community with wide-open arms. Fullstack has embraced us for our motivation, dedication, values, ambitions and goals, backgrounds and experiences, and our differences. We&amp;rsquo;ve been empowered to take what we&amp;rsquo;ve learned to go out and do things to make our world a better place, while also making ourselves better developers and better people.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s been a wild ride so far, and we still have some time to go before being done. Until then, I&amp;rsquo;ll continue treasuring every day that goes by, embracing the successes, failures, learning experiences, and the Fullstack community along the way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 5: Thoughts and Reflections</title>
      <link>http://bethqiang.com/blog/2016/12/04/fullstack-academy-week-5/</link>
      <pubDate>Sun, 04 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/12/04/fullstack-academy-week-5/</guid>
      <description>

&lt;p&gt;It&amp;rsquo;s been a slightly crazy week. I missed two days of class to attend &lt;a href=&#34;http://bethqiang.com/blog/2016/11/30/nodejs-interactive-north-america-2016/&#34; target=&#34;_blank&#34;&gt;Node.js Interactive North America&lt;/a&gt;, which was enormously fun and educational but also meant that I had two days of class to catch up on, in addition to staying on top of what we were learning every day.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve spent most of this weekend doing some preliminary review for our upcoming Junior Phase checkpoint. (Basically, our &amp;ldquo;final&amp;rdquo; exam. It determines whether or not we get to move on to Senior Phase. You know, just a wee thing.) This has reinforced to me two things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We&amp;rsquo;ve learned A LOT – there&amp;rsquo;s a lot to review!&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Things that would have (and did) caused me headaches in week 1 are pretty easy now. I can definitely tell that my problem-solving ability, especially in the context of programming, has increased drastically; problems that I wouldn&amp;rsquo;t have been able to solve without significant help in week 1 only took a little bit of pseudocoding on a piece of paper before I was able to quickly implement a solution.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On the flip side, this week and this experience in general has proven to me that the more that I learn, the more I feel like I don&amp;rsquo;t know, in the absolute best way possible – there really never is a lack of things to learn and investigate and tinker around with. Though I&amp;rsquo;m starting to realize just how much I&amp;rsquo;ve learned and grown in the past five weeks, entire worlds that I had no idea existed prior have opened up to me this week.&lt;/p&gt;

&lt;p&gt;During Node.js Interactive, I learned about bots and image APIs that can pinpoint locations and emotions and the enormously large number of ways things could go wrong with your application&amp;rsquo;s security at any given point in time. We also started React this week, which has been an entire adventure in and of itself. (Much love to my pairs, who have been patient with me when I ended up confusing myself and offered some great jokes when things got a little rough.) I also listened to two different podcasts about Elm this week, and I&amp;rsquo;m itching to try it. I&amp;rsquo;ve wanted to for a while, and have been putting it off, because free time isn&amp;rsquo;t really a concept for me anymore, and because I convinced myself that I need to learn JavaScript well before learning another language&amp;hellip;but I may dabble in it over winter break. Just to try it out and see what it&amp;rsquo;s like!&lt;/p&gt;

&lt;p&gt;(Speaking of which, one of those podcasts led me to &lt;a href=&#34;https://youtu.be/txxKx_I39a8&#34; target=&#34;_blank&#34;&gt;this talk&lt;/a&gt; by Jamison Dance from React.js Conf earlier this year about some of the flaws in JavaScript that React sort-of addresses and that Elm &lt;em&gt;actually&lt;/em&gt; addresses. It&amp;rsquo;s amazing and hilarious and insightful and one of my favorite talks I&amp;rsquo;ve discovered so far.)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m honestly a little surprised by how much I&amp;rsquo;m enjoying React. I don&amp;rsquo;t know if I should have been that surprised, considering I&amp;rsquo;ve been looking forward to learning it ever since sort-of-but-not-really learning it at the &lt;a href=&#34;http://bethqiang.com/blog/2016/10/24/first-hackathon-react-git-and-working-with-developers/&#34; target=&#34;_blank&#34;&gt;Austin Diversity Hackathon&lt;/a&gt;, and I&amp;rsquo;ve had an inexplicable propensity towards functional programming. I&amp;rsquo;ve been having a lot of fun with it, and I can&amp;rsquo;t wait to build a personal project or two over the break with it!&lt;/p&gt;

&lt;h2 id=&#34;so-what-do-you-want-to-be-when-you-grow-up&#34;&gt;&amp;ldquo;So, what do you want to be when you grow up?&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;The rapidly approaching end to Junior Phase means that we&amp;rsquo;re now gearing up for Senior Phase. I&amp;rsquo;m really looking forward to applying what we&amp;rsquo;ve learned to build out actual applications. But, it also means that post-Fullstack is a very real thing that we now should start thinking about, whether it be us joining the workforce or joining Fullstack as a fellow.&lt;/p&gt;

&lt;p&gt;I really like the idea of being a fellow; mentoring and teaching has always been one of my favorite things, and I think it would be an incredible opportunity to continue my learning in an environment that I love. I&amp;rsquo;m planning on talking to both of my fellows to find out what their experiences have been like, and then I&amp;rsquo;ll weigh my options after that and decide if I want to apply.&lt;/p&gt;

&lt;p&gt;If I decide not to apply or don&amp;rsquo;t get accepted as a fellow (both of which are very real possibilities!), that means job hunting, everyone&amp;rsquo;s absolute &lt;em&gt;favorite&lt;/em&gt; activity ever, will definitely be happening. We just received a huge amount of information about what&amp;rsquo;s to come: from prepping our online presence and resumes and cover letters, to practicing whiteboarding with our cohort to doing mock interviews with our career staff, to actually figuring out what kind of companies we&amp;rsquo;d want to work for, to prepping for our tech talks and demo day, and a whole host of other activities. I&amp;rsquo;ve decided to adopt a very healthy coping mechanism: other than an initial read-through of all of the material we were given, I&amp;rsquo;m pretending like none of that exists. (For now.)&lt;/p&gt;

&lt;h2 id=&#34;come-see-me-talk&#34;&gt;Come see me talk!&lt;/h2&gt;

&lt;p&gt;And on a &lt;em&gt;completely&lt;/em&gt; different note, if you&amp;rsquo;re in Austin, I&amp;rsquo;m giving a lightning talk tomorrow at &lt;a href=&#34;https://www.meetup.com/Women-Who-Code-Austin/events/232301799/&#34; target=&#34;_blank&#34;&gt;Women Who Code Austin&amp;rsquo;s meetup&lt;/a&gt;! Come join us for food and camraderie and to hear about my conference experience and count how many times I say &amp;ldquo;um.&amp;rdquo; (In college, I actually sought out people who were willing to tally the number of times I said &amp;ldquo;um&amp;rdquo; to practice speaking with because that&amp;rsquo;s a habit I&amp;rsquo;ve been working on breaking.)&lt;/p&gt;

&lt;p&gt;I also forgot how much public speaking occasionally terrifies me. It&amp;rsquo;ll be fine, right? Right. It&amp;rsquo;ll be fine. Probably.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 3: Thoughts and Reflections</title>
      <link>http://bethqiang.com/blog/2016/11/20/fullstack-academy-week-3/</link>
      <pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/11/20/fullstack-academy-week-3/</guid>
      <description>

&lt;p&gt;With a CS Saturday about functional programming, immutability, and Git under our belts, we&amp;rsquo;re officially halfway through Junior Phase.&lt;/p&gt;

&lt;p&gt;Um, what?&lt;/p&gt;

&lt;p&gt;Yeah, so, that&amp;rsquo;s a thing.&lt;/p&gt;

&lt;h2 id=&#34;the-week-by-the-numbers&#34;&gt;The Week By the Numbers:&lt;/h2&gt;

&lt;p&gt;Cups of coffee had: 5.5&lt;/p&gt;

&lt;p&gt;Miles ran: 4 (ugh)&lt;/p&gt;

&lt;p&gt;Current length of to-do list: 37&lt;/p&gt;

&lt;p&gt;Hours I&amp;rsquo;ve spent snuggling with/walking dogs: 3&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For most of the immersive so far, I felt like I was at least sort of staying on top of things – I may have been struggling to tread water, but my head was still above the surface.&lt;/p&gt;

&lt;p&gt;Until Tuesday, when &lt;a href=&#34;http://bethqiang.com/blog/2016/11/16/on-feeling-completely-overwhelmed/&#34; target=&#34;_blank&#34;&gt;I felt like I was going &lt;em&gt;down&lt;/em&gt; and I had no idea how to stop it&lt;/a&gt;. Then during lunch on Wednesday, I stepped away from my computer, and just took some time to appreciate the outdoors and the food I was eating and the moment that I was in. Eventually, I was able to reassure myself that I am a capable human being, and that with enough time, effort, and conscious practice, everything that I was confused about would start to make sense. Eventually.&lt;/p&gt;

&lt;p&gt;It was also nice to hear in the end-of-week reflection among our cohort that I was far from the only one who had had an off day or two. One of our instructors mentioned that this journey is a rollercoaster: you can feel on top of the world and everything just clicks one day, and like everything&amp;rsquo;s falling apart the very next. It&amp;rsquo;s definitely a marathon, not a sprint, and we&amp;rsquo;re all getting there together.&lt;/p&gt;

&lt;p&gt;Looking back, I had started to neglect some aspects of my health, other than trying for the occasional run. In the days since then, the core changes that I&amp;rsquo;ve made in my life are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Going outside during lunch &lt;em&gt;every day&lt;/em&gt;. Even if it&amp;rsquo;s just for 10 or 15 minutes. Just taking a moment to 110% get my mind and my body away from any kind of screen is incredibly refreshing and calming.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Raised my second monitor to be at eye-level. This has helped with my terribly cranky back.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Going to bed earlier and getting up earlier. But &lt;em&gt;also&lt;/em&gt; getting at least 7 hours of sleep a night. Because let&amp;rsquo;s be honest, very few people are at their best at 1am. And very few people can perform optimally on smaller amounts of sleep. (I&amp;rsquo;m not lucky enough to be in either of those camps.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Making some time for non-coding things. Like taking an entire Saturday night off to have dinner and see some cool lights along the river with friends. And spending some time at the animal shelter I volunteer at to snuggle with and walk dogs. (There are very few things in life that are better than snuggling with dogs.)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On my walks and runs, I&amp;rsquo;ve been listening to podcasts like &lt;a href=&#34;https://softskills.audio&#34; target=&#34;_blank&#34;&gt;Soft Skills Engineering&lt;/a&gt; (incredibly informative but also humorous and entertaining), &lt;a href=&#34;https://gimletmedia.com/show/startup&#34; target=&#34;_blank&#34;&gt;StartUp&lt;/a&gt;, &lt;a href=&#34;http://www.codenewbie.org&#34; target=&#34;_blank&#34;&gt;CodeNewbie&lt;/a&gt;, and &lt;a href=&#34;http://www.greaterthancode.com&#34; target=&#34;_blank&#34;&gt;Greater Than Code&lt;/a&gt; – podcasts that are related to tech and development but don&amp;rsquo;t get into the technical weeds. I&amp;rsquo;ve also been reading more tech blogs and watching recorded tech talks and project presentations on &lt;a href=&#34;https://www.youtube.com/fullstackacademy&#34; target=&#34;_blank&#34;&gt;Fullstack&amp;rsquo;s YouTube Channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On a related note, someone who works at Venmo also came to campus to give a tech talk, during which she live-coded a mini version of Express. I was incredibly impressed, and hope that sometime in the near future, I can also try live-coding &lt;em&gt;something&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In the spirit of the upcoming holiday, but also just because I feel like it&amp;rsquo;s incredibly deserved, I want to once again reiterate how much I absolutely love and appreciate the entire Fullstack staff and everyone in my cohort. Staff who are in our Slack group but have very little actual relation to our cohort have helped us out in some of our 9pm coding crises. Omri and Geoff, our instructors, are able to make lectures interesting and entertaining, and are always looking out for us and willing to take whatever time is needed to ensure everyone is staying sane and asking questions and learning. Dani, one of our fellows, and I spent a ton of time puzzling out a recursion problem during our office hours – we haven&amp;rsquo;t quite figured it out yet, but it&amp;rsquo;ll be pretty great when we do. Eliot, our other fellow, took a few hours out of his Sunday afternoon to review and answer any lingering questions about Sequelize before our checkpoint (basically, a test) tomorrow. And my cohort has been very open and supportive and upbeat – we definitely have a &lt;a href=&#34;https://www.youtube.com/watch?v=iFu8Z-cV0Xk&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;We&amp;rsquo;re All in This Together&lt;/em&gt;&lt;/a&gt; kinda vibe.&lt;/p&gt;

&lt;h2 id=&#34;node-js-interactive-north-america&#34;&gt;Node.js Interactive North America&lt;/h2&gt;

&lt;p&gt;And on a completely different note, I&amp;rsquo;ve been awarded a ticket to &lt;a href=&#34;http://events.linuxfoundation.org/events/node-interactive&#34; target=&#34;_blank&#34;&gt;Node.js Interactive North America&lt;/a&gt;, which is taking place here in Austin in a week and a half! This will mean that I&amp;rsquo;ll be missing two days of class (and therefore, will be very busy over Thanksgiving) but it also means that I&amp;rsquo;ll get to spend two days immersed in everything Node, meet awesome people, and hear about all of the super cool things that are going on in the community. Thanks to &lt;a href=&#34;https://www.womenwhocode.com/&#34; target=&#34;_blank&#34;&gt;Women Who Code&lt;/a&gt; for making it possible for me to attend, and I can&amp;rsquo;t wait to share everything that I experience!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 3, Days 2 and 3: On Feeling Completely Overwhelmed</title>
      <link>http://bethqiang.com/blog/2016/11/16/on-feeling-completely-overwhelmed/</link>
      <pubDate>Wed, 16 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/11/16/on-feeling-completely-overwhelmed/</guid>
      <description>

&lt;p&gt;Let’s talk about feelings for a second. I’m generally a very optimistic person with a decent amount of confidence in myself, my critical-thinking and problem-solving abilities, and my ability to stick with something when it’s challenging. I don’t like to dwell on the negatives, and I generally try not to let myself get too down.&lt;/p&gt;

&lt;p&gt;But today was kind of a sucky day. It didn’t start off that way. I woke up after six hours of sleep feeling a little sleepy, but feeling pretty good about most of the material we had covered in the past couple of days. I knew that my blog post from yesterday needed editing, and set out to do that before class.&lt;/p&gt;

&lt;p&gt;As I was editing, I realized that maybe I didn’t understand some of the things we did as much as I thought I did. My post didn’t really make sense in a lot of places, and I couldn’t figure out how to &lt;em&gt;make&lt;/em&gt; it make sense. Then, we reviewed the solution to the workshop we did yesterday, and I quickly started getting overwhelmed – I knew generally how to write decent tests, and I thought I had a pretty good grasp of promises, but I was having a really hard time seeing how everything was connecting.&lt;/p&gt;

&lt;p&gt;Then, we talked more in-depth about promises, and my brain was still a little boggled and twisted from the session before, and I wasn’t able to follow as much as I maybe could have otherwise. By the end of the morning, I was completely overwhelmed, stressed, and my confidence was at the lowest point it’s been since Fullstack began. My brain was running in circles around itself, and even things I knew that I knew started to not make any sense.&lt;/p&gt;

&lt;p&gt;During lunch, when I usually take some time to read programming blogs or review what we covered during the morning or a variety of related things, my sole goal was to get out of the house and do something unrelated to coding for the entire hour and a half. I took a 45 minute walk while listening to a new podcast by Stephen Dubner, of Freaknomics fame, called &lt;a href=&#34;http://freakonomics.com/tmsidk/&#34; target=&#34;_blank&#34;&gt;Tell Me Something I Don’t Know&lt;/a&gt;. (It was literally a podcast about random facts. It was pretty interesting, though I don’t know if I’ll be a regular listener.) I then ate lunch, watched some cute puppy videos, and read about politics.&lt;/p&gt;

&lt;p&gt;Once I had an opportunity to calm down and reassure myself that I did in fact, know how to code and solve problems with some degree of competency, and that yes, I could do this, I knew I needed to change something. I needed more time. Time for me to do thorough concept reviews in the evenings, and do fun Code Wars problems, and go to meetups, and work on personal projects, and do more functional programming because for some reason that really excites me. I needed time do things that I find fun that aren&amp;rsquo;t directly related to class. And also, you know, sleep. But more importantly, I &lt;em&gt;also&lt;/em&gt; needed some time every day to do things like go for 45 minute walks or watch cute puppy videos or get dinner with a friend once in a blue moon. And run. Running helps. (That&amp;rsquo;s a long list, I know.)&lt;/p&gt;

&lt;p&gt;This isn&amp;rsquo;t an uncommon theme; I mentioned that I needed to improve upon my time management and prioritization in &lt;a href=&#34;http://bethqiang.com/blog/2016/11/13/fullstack-academy-week-2/&#34; target=&#34;_blank&#34;&gt;last week&amp;rsquo;s reflection post&lt;/a&gt;. I knew, at the time of writing that, that I needed to change &lt;em&gt;something&lt;/em&gt;. But I didn&amp;rsquo;t realize that I couldn&amp;rsquo;t keep doing what I was doing, and still stay sane.&lt;/p&gt;

&lt;p&gt;Outside of class and evening reviewing (which, in and of itself, I need to find a way to optimze), writing these posts have by far taken the largest chunk of my time. Daily 1,500-word blog posts are great, and I’m sure I’ll thank myself for them later. But, I’m starting to realize with the schedule that we have and the time I need outside of class, they’re unsustainable. Frankly, they take too much time to write, and even just saving an hour a day will give me an hour to start doing other things. That definitely doesn&amp;rsquo;t mean I&amp;rsquo;m going to abandon writing about each day. I just have to choose more wisely what I want to write, and cap the length of and detail in each post, thereby lessening the time that they take.&lt;/p&gt;

&lt;p&gt;In the interest of keeping some kind of record of what we’ve been doing and learning the past two days, here’s a (sort of) quick-and-dirty summary.&lt;/p&gt;

&lt;h2 id=&#34;back-end-testing-and-sequelize-magic&#34;&gt;Back-End Testing and Sequelize Magic&lt;/h2&gt;

&lt;p&gt;We learned all about testing on the back-end. Some of the key takeaways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It’s generally preferable to use a different database to test your code than when you’re developing or when your app is in production, so that you can stick stuff in and take stuff out and completely reset your database freely. This can be done pretty easily by creating a process environment variable, and then setting a conditional for that variable when you’re setting your database.&lt;/li&gt;
&lt;li&gt;Constantly talking about Mocha and Chai made me constantly want a hot, creamy, caffeine- and sugar-laden beverages.&lt;/li&gt;
&lt;li&gt;When we’re using promises in our tests, which is often because much of what we’re testing is asynchronous, we need to include either &lt;code&gt;return&lt;/code&gt; or &lt;code&gt;done&lt;/code&gt;. If neither are included, Mocha reads our tests, and passes them, &lt;em&gt;before our async functions finish doing what they’re supposed to do&lt;/em&gt;. And once our async functions are done, we&amp;rsquo;ll get an error – but the tests have already passed and Mocha&amp;rsquo;s over it. So that’s not good.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Done&lt;/code&gt; is passed into our test function, and then we can invoke it at the end (and in our &lt;code&gt;catch&lt;/code&gt;) to signal to Mocha that it’s good to go and can move on to the next test. If we don’t want to use &lt;code&gt;done&lt;/code&gt;, we can use &lt;code&gt;return&lt;/code&gt; instead, and to Mocha, it’ll almost be like an implied &lt;code&gt;then&lt;/code&gt; after.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we&amp;rsquo;re creating 3 pages to test if our &lt;code&gt;findByTag&lt;/code&gt; function works, with &lt;code&gt;done&lt;/code&gt;, this would look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;describe(&#39;findByTag&#39;, function () {
  beforeEach(function(done) { // done is passed in
    Promise.all([
      Page.create({ new page info }),
      Page.create({ new page info }),
      Page.create({ new page info })
    ])
    .then(function() { // our success/error functions
      done();
    }, done)
  })
  it(&#39;gets pages with the search tag&#39;, function(done) { // done is passed in here as well
    Page.findByTag(&#39;tag&#39;)
    .then(function(pages) {
      expect(pages).to.equal(something)
      expect(pages).to.equal(somethingelse)
      done(); // this indicates the end of the async
    })
    .catch(done); // error-handling
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;code&gt;return&lt;/code&gt;, the same code would look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;describe(&#39;findByTag&#39;, function () { // no done being passed
  beforeEach(function() {
    return Promise.all([ // return this
      Page.create({ info }),
      Page.create({ info }),
      Page.create({ info })
    ]) // no need for success/error functions using done
  })
  it(&#39;gets pages with the search tag&#39;, function() { // no done being passed
    return Page.findByTag(&#39;tag&#39;) // return this
    .then(function(pages) {
      expect(pages).to.equal(something)
      expect(pages).to.equal(somethingelse) // no done after this
    })
  }); // and no need for a catch(done) statement here
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On Tuesday, my pair and I were working on tests for our &lt;a href=&#34;http://bethqiang.com/blog/2016/11/14/building-a-wikipedia-clone/&#34; target=&#34;_blank&#34;&gt;Wikipedia clone&lt;/a&gt;, and for one of them, we were creating an instance that pulled from two models, &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Page&lt;/code&gt;. After wrestling with it for an hour and a half and finally getting it to work the non-magical, slightly harder, and not as pretty way, our fellow then asked us if we wanted to try a little Sequelize magic to make this happen – a little something called eager creation. Here’s what we worked through to come up with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// in models &amp;gt; index.js, set associations:
Page.belongsTo(User);
User.hasMany(Page);

// in our test specs, creating a new instance:
beforeEach(function(done) {
User.create({
  name: &#39;Spock&#39;,
  email: &#39;spock@starfleet.gov&#39;,
  pages: [{
    title: &#39;Science Officer\&#39;s Log #7&#39;,
    content: &#39;Humans are emotional.&#39;,
    status: &#39;open&#39;,
    tags: [&#39;Sci-fi&#39;, &#39;TV&#39;]
    }]
    },
    {
      include: [ Page ]
    })
    .then(newInfo =&amp;gt; {
      newPageInfo = newInfo.pages; // our pages data can now be accessed via the pages property
      done();
    })
    .catch(done);
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We also learned that Sequelize is way too smart and picky for its own good. For an entire hour, we tried an incredible number of ways and syntaxes to create a &lt;code&gt;page&lt;/code&gt; property, but every time, we’d get an empty array back. The fact that we got an array back showed us that Sequelize was trying to give us something, just not what we wanted. Our fellow had a sudden realization – Sequelize was looking for a &lt;code&gt;pages&lt;/code&gt; property, and we were trying to give it a &lt;code&gt;page&lt;/code&gt; property. He also told us a funny (or not, if you were him) story about how he was once trying to do something similar with a property that ended in a “y” – which, in the English language, the plural becomes “ies.” For an entire day or two, he was trying to figure out why Sequelize was putting up a fit, before realizing he had specified the plural as “ys.”&lt;/p&gt;

&lt;h2 id=&#34;promise-mechanics-and-building-a-promise-library&#34;&gt;Promise Mechanics and Building a Promise Library&lt;/h2&gt;

&lt;p&gt;Today, we spent a good deal of time talking about the mechanics of promises, and we spent the afternoon building a deferral-style promise library similar to &lt;a href=&#34;https://docs.angularjs.org/api/ng/service/$q&#34; target=&#34;_blank&#34;&gt;AngularJS’s $q service&lt;/a&gt;. We created &lt;code&gt;$Promise&lt;/code&gt; and &lt;code&gt;Deferral&lt;/code&gt; classes, with the &lt;code&gt;then&lt;/code&gt; method on the &lt;code&gt;$Promise&lt;/code&gt; prototype that took two callback functions and the &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; methods on the &lt;code&gt;Deferral&lt;/code&gt; prototype.&lt;/p&gt;

&lt;p&gt;The first roadblock we faced was figuring out how to trigger the &lt;code&gt;then&lt;/code&gt; and the callback functions, which was stored in the &lt;code&gt;$promise&lt;/code&gt; instance, when the promise was resolved. Our first idea was to include it in the &lt;code&gt;resolve&lt;/code&gt; and &lt;code&gt;reject&lt;/code&gt; methods, but then they’d be triggered right after a promise was fulfilled – not when the &lt;code&gt;then&lt;/code&gt; was called. We ended up creating an intermediate function, whose job was solely to take the callback function off of the array it was stored in and run it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$Promise.prototype.callHandlers = function(data) {
  if (this._state !== &#39;pending&#39;) {
    let fn = this._handlerGroups.shift();
    // handlerGroups was an array of objects containing success and failure functions
    fn.successCb(data);
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The second challenge we faced was to ensure that, even if events occurred in the opposite order – if the promise is resolved after the &lt;code&gt;then&lt;/code&gt; – that the &lt;code&gt;then&lt;/code&gt; would still run. We contemplated a myriad of options, including recursion, a while loop, a &lt;code&gt;setInterval&lt;/code&gt; to check the state of the promise, and ended up going down a rabbit hole trying to research &lt;code&gt;setImmediate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We later learned that the answer was &lt;em&gt;incredibly&lt;/em&gt; easy – we could just call our &lt;code&gt;callHandlers&lt;/code&gt; function in the same function that fulfilled the promise. When the &lt;code&gt;then&lt;/code&gt; is run initially (before the promise is fulfilled), it’ll add its callback functions to the storage array, and even though it calls the &lt;code&gt;callHandlers&lt;/code&gt; method, the &lt;code&gt;callHandlers&lt;/code&gt; method won’t invoke the callback because the state is still pending. When the promise is resolved, then we just need to call the &lt;code&gt;callHandlers&lt;/code&gt; method to run the callback functions that were already stored.&lt;/p&gt;

&lt;h2 id=&#34;game-night-round-2&#34;&gt;Game Night, Round 2&lt;/h2&gt;

&lt;p&gt;We also had another Game Night, where I finally got to see some of the things my fellow classmates have been building. Someone created a pool surrounded by lava. Someone else claimed an enormous plot of land – our theory is that he&amp;rsquo;s trying to build a subdivision and drive up rent. One of our instructors decided to cover his entire plot in glass blocks (because, why not, I guess?), and the other instructor built a cute little cabin. Apparently, someone built an absolutely frightening house – I can’t tell you what that means or what it looks like, because I was too absorbed in building my treehouse to venture over there. We’re having a Minecraft hackathon on Monday afternoon, and I have very little idea of what that involves, but I’m really excited!&lt;/p&gt;

&lt;p&gt;And on another note, it&amp;rsquo;s both hilarious and not how half of this post built up into “I need to write shorter posts”&amp;hellip;and this is over 1600 words, not including the code blocks. C’mon, Beth.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 2: Thoughts and Reflections</title>
      <link>http://bethqiang.com/blog/2016/11/13/fullstack-academy-week-2/</link>
      <pubDate>Sun, 13 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/11/13/fullstack-academy-week-2/</guid>
      <description>

&lt;h2 id=&#34;the-week-by-the-numbers&#34;&gt;The Week By the Numbers:&lt;/h2&gt;

&lt;p&gt;Cups of coffee had: 4&lt;/p&gt;

&lt;p&gt;Miles ran: 5.25&lt;/p&gt;

&lt;p&gt;Current length of to-do list: 32&lt;/p&gt;

&lt;p&gt;Hours spent in front of a computer: more than I&amp;rsquo;d like to admit (I didn&amp;rsquo;t actually keep track of this, but I think it&amp;rsquo;d be interesting and/or possibly slightly terrifying)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://bethqiang.com/blog/2016/11/12/javascript-promises-and-minecraft/&#34; target=&#34;_blank&#34;&gt;Number of times I fell off the world or died in Minecraft&lt;/a&gt;: 0&lt;/p&gt;

&lt;h2 id=&#34;overall-thoughts&#34;&gt;Overall Thoughts&lt;/h2&gt;

&lt;p&gt;The running theme this week was back-end work: Node, Express, and SQL. Most of my work in the past has been entirely on the front-end, with a week of learning back-end on my own right before Foundations started. It&amp;rsquo;s an entirely different side of things, but I really enjoy it — most of the time. It can be sometimes be really frustrating being unable to see the changes that you&amp;rsquo;re making without console logging &lt;em&gt;everything&lt;/em&gt;, but I like the unique challenges that it presents. (Although I did go back to my Game of Life on Saturday night purely because I needed a small break from the back-end altogether, and just wanted to go back to making pretty colors go certain places for a bit.)&lt;/p&gt;

&lt;p&gt;Pairing this week was a somewhat interesting, and different, experience for me. I felt like a couple of the people I paired with in the first week were more comfortable with the material than I was, so I was the one who needed to slow my pair down occasionally to really grasp what was going on. This week, I felt like I had a better understanding of the material than some of my pairs, and so I felt like I did more explaining than I did last week. This far from a bad thing; teaching someone else definitely forces you to &lt;em&gt;really&lt;/em&gt; know what you&amp;rsquo;re talking about, and I discovered in some of those cases that I didn&amp;rsquo;t understand something as well as I thought I did. In other cases, it really cemented the concept in my mind, and I was able to more clearly think through and articulate solutions.&lt;/p&gt;

&lt;p&gt;One of the things I need to try to do better going forward is time management and prioritization. It&amp;rsquo;s not that I waste a lot of time (I&amp;rsquo;d like to think that four years at Rice made me &lt;em&gt;very&lt;/em&gt; efficient with my time), but there&amp;rsquo;s just a very long list of things I want to do regularly and unless I make them a priority and make an effort to actually do them, they won&amp;rsquo;t happen. There are a few (just like my to-do list, this list is also growing) personal projects that I want to build, and I haven&amp;rsquo;t really reserved any time each day to do so. Likewise with Code Wars: I&amp;rsquo;ve used our hour in the morning sometimes to work on the challenges, but sometimes I opt to do other things, like finishing up the previous day&amp;rsquo;s blog post or reviewing for the upcoming day&amp;rsquo;s lecture and workshops. I also missed a meet up last week that I had been wanting to go to because I convinced myself that I was too tired and that I wanted to study — which I&amp;rsquo;m a little sad about.&lt;/p&gt;

&lt;p&gt;Besides the time machine that I&amp;rsquo;m planning on building as my capstone project, I haven&amp;rsquo;t yet found a good solution or system to be able to accommodate everything I want to do. I hope to sort out some of those things this week and start establishing a system, now that we&amp;rsquo;re in a little more of a rhythm.&lt;/p&gt;

&lt;h2 id=&#34;the-fullstack-remote-experiences&#34;&gt;The Fullstack &amp;amp; Remote Experiences&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m no longer referring to this section as just &amp;ldquo;the Remote Experience,&amp;rdquo; because I feel like what we&amp;rsquo;ve been experiencing transcends that — I&amp;rsquo;m not sure anybody in our cohort denies that we&amp;rsquo;re really getting the Fullstack experience.&lt;/p&gt;

&lt;p&gt;To start, quite possibly one of the biggest events in our lives happened this week — the election of Donald Trump to the American presidency. Instead of glossing over it and pretending like it was a typical Wednesday the day afterwards, Fullstack made some time in the day to allow us to openly discuss amongst each other our thoughts and feelings and hopes and fears, without any mention of code whatsoever. I enormously appreciated Fullstack&amp;rsquo;s commitment to creating an open, non-judgmental, safe environment for every single student, whether in New York, Chicago, or online. The &amp;ldquo;Ladies of Fullstack&amp;rdquo; group has also been a great support system — sometimes, it&amp;rsquo;s just really nice to be among a group of women.&lt;/p&gt;

&lt;p&gt;In other news, Pieter DePree, Recruiting Lead at Stack Overflow, came to campus to talk about how Stack Overflow hires developers, and more specifically, what we can do to start preparing ourselves and our online presence for the job hunt in a couple of months. Though some of his points didn&amp;rsquo;t necessarily apply at this point in time, it did make us aware of what we need to start doing when, and gave us the knowledge of how to prepare ourselves for when it did. It was also really interesting to get a detailed look into the hiring process at company like Stack Overflow.&lt;/p&gt;

&lt;p&gt;And lastly, who could forget about our Minecraft adventure on Friday? &lt;a href=&#34;http://bethqiang.com/blog/2016/11/12/javascript-promises-and-minecraft/&#34; target=&#34;_blank&#34;&gt;I&amp;rsquo;ve written a bit on it before&lt;/a&gt;, so I&amp;rsquo;m not going to repeat any of it here, but I felt like that was a great bonding moment for our cohort and everyone associated with it — instructors, fellows, staff, and even one of Fullstack&amp;rsquo;s co-founders. I haven&amp;rsquo;t yet been back into our server to see if people have built anything this weekend, but I&amp;rsquo;m excited to check in later tonight and see what&amp;rsquo;s been happening.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Week 1: Thoughts and Reflections</title>
      <link>http://bethqiang.com/blog/2016/11/06/fullstack-academy-week-1/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://bethqiang.com/blog/2016/11/06/fullstack-academy-week-1/</guid>
      <description>

&lt;p&gt;With a day on compiler theory and building our own parsers on Saturday, week 1 of my immersive experience at Fullstack (and of the junior phase) is officially over!&lt;/p&gt;

&lt;h2 id=&#34;feelings&#34;&gt;Feelings&lt;/h2&gt;

&lt;p&gt;I’m a little overwhelmed. We’re learning A LOT every single day, and I haven’t felt like I’ve truly absorbed (or even understood!) all of it yet. What’s more, Fullstack deliberately makes its workshops challenging, and it’s very rare that we completely finish one and feel like we 110% understand what was going on. It’s really nice to know that everyone feels this way though, and it’s not just me. And as someone in our class said on Friday when we were reflecting on the week — “nothing that’s worth it is easy.”&lt;/p&gt;

&lt;p&gt;My list of things to go back over and/or re-do is a billion miles long and I’m not quite sure it’s ever going to become much shorter as the weeks go by. This isn&amp;rsquo;t a bad thing at all - it contributes slightly to the &amp;ldquo;feeling overwhelmed&amp;rdquo; thing; however, one of my primary goals in attending Fullstack was to learn as much as possibly can, and that&amp;rsquo;s definitely happening. There just aren’t quite enough hours in a day!&lt;/p&gt;

&lt;p&gt;Though we’ve already crammed a lot into our brains, it’s just the beginning, and I don’t know if I’ve ever been as excited for anything as I am for what’s to come. I’m excited to continue learning and growing alongside my cohort and the staff, to dive into Node and Express and React and VR and everything else that Fullstack has planned for us.&lt;/p&gt;

&lt;p&gt;I’m also grateful that we had the 4-week Foundations portion of our curriculum structured the way it was. During Foundations, we learned about things like scope and closure, prototypes and inheritance, the this keyword, and recursion, all of which we use on a daily basis—they really do form the foundation of JavaScript. Foundations gave me a solid understanding of the basics, so that we could hit the ground running from day one, go deeper into the material, and actually build things.&lt;/p&gt;

&lt;h2 id=&#34;pair-programming&#34;&gt;Pair Programming&lt;/h2&gt;

&lt;p&gt;I’ve realized that pair programming isn’t necessarily the same as talking to my teddy bear (which was a strategy I used to prepare for &lt;a href=&#34;http://bethqiang.com/blog/2016/10/17/the-journey-to-fullstack-part-2-the-bootcamp-admissions-process/&#34; target=&#34;_blank&#34;&gt;my bootcamp interviews&lt;/a&gt;, as I didn’t possess &lt;a href=&#34;https://en.wikipedia.org/wiki/Rubber_duck_debugging&#34; target=&#34;_blank&#34;&gt;a rubber duck&lt;/a&gt;). I love the fact that we can bounce ideas off of each other, and that I often gain a different perspective on whatever we’re working on just by having someone else on the same problem.&lt;/p&gt;

&lt;p&gt;I somewhat dislike the fact that if both of us are confused, sometimes we end up confusing each other even more than either one of us may be if we were working alone. I also consider myself an introvert, which occasionally makes constantly pairing hard—sometimes I just want to retreat into my own head for a little bit, and that doesn’t really happen that often.&lt;/p&gt;

&lt;p&gt;Neither of these are necessarily or intrinsically bad things; like getting our brains actively working for 8-10+ hours per day, it’s just something else that I need to learn to do. Pairing and coding with others is definitely a skill that I’m still working on developing, and I’ll definitely get plenty of opportunity by the time our program is done. (Most of our days are spent pairing, and I’m sure that amount will increase by the time we hit senior phase, which is almost entirely project-based.)&lt;/p&gt;

&lt;h2 id=&#34;the-remote-experience&#34;&gt;The Remote Experience&lt;/h2&gt;

&lt;p&gt;I was initially a little nervous about doing a remote program, and especially about being the first cohort. However, I’ve been absolutely blown away with the effort and dedication that the Fullstack staff have shown to the remote program.&lt;/p&gt;

&lt;p&gt;It’d be so easy to use “oh, well, everything’s online, so it probably can’t be done as well” as an excuse for not executing 110% all the time, but that’s never been the case. The staff is the first to admit that they’re still trying to figure out things as they go along and occasionally (mostly technological) mishaps happen, but it’s very clear that a lot of thought and effort has already been put into the program, and they’re giving their absolute all when it comes to making this nothing but the best experience for us. They’re incredibly open to feedback, both good and bad, and have shown a commitment to really taking our feedback to heart and making changes if it makes sense to.&lt;/p&gt;

&lt;p&gt;As an example from just the first week, one of my classmates mentioned that it was a little annoying to be pulled out of the pair sessions, back into the main classroom for a few minutes for our instructors to tell us that it was lunch, and then put back into the pair sessions and left to our own devices for the next hour and a half. After this comment was brought up and it was agreed upon by the rest of the cohort that we supported the idea of just leaving us in our pairing rooms, an immediate change was made.&lt;/p&gt;

&lt;p&gt;Those who are in-person, both staff and students, are doing their utmost to include our cohort in activities as well. As an example, there’s a “Ladies of Fullstack” group that, as you can probably tell by the name, consists of all of the women in all of Fullstack’s programs. The New York group meets once a week during lunch to chat, eat, and hang out, and our fellow helped us to join via Google hangouts. It was occasionally hard to hear everyone in the room, but everyone was incredibly inclusive and interested in what our experience had been like thus far. As another example, this past CS Saturday, we were in a live stream of the lecture in New York, with the ability to ask questions in real-time through our electronic system. They even procured a mic to be passed around the in-person students so that we could hear their questions as well!&lt;/p&gt;

&lt;p&gt;In terms of bonding with each other, I’ve talked about &lt;a href=&#34;http://bethqiang.com/blog/2016/11/01/introductions-make-your-own-adventure-game-and-data-structures/&#34; target=&#34;_blank&#34;&gt;Hot Seat&lt;/a&gt; and &lt;a href=&#34;http://bethqiang.com/blog/2016/11/03/big-o-algorithms-and-game-of-life/&#34; target=&#34;_blank&#34;&gt;learning groups&lt;/a&gt; before, both of which have helped enormously in bonding with and feeling more connected to my cohort. Everyone, including our instructors and fellows, have a great sense of humor, and laughing even during lectures isn’t a rare occurrence at all. I think we have a great group dynamic as well; while there are definitely the more outspoken ones and the shier ones, everyone seems to get along really well.&lt;/p&gt;

&lt;p&gt;There’s a really unique element that comes with everyone being in their own homes, too — we get to see little snippets of what our classmates and their lives are like outside of class, sooner and on a different level than we might have if we were in person. We’ve seen classmates’ kids and cats and dogs, and have heard each other when we forget to put ourselves on mute, talking to significant others or singing to ourselves or swearing to ourselves after a particularly challenging workshop.&lt;/p&gt;

&lt;p&gt;Lastly, a lot of what’s planned for the VR Lab also seem to be for not only the sake of our learning, but also a way for us to spend more time with each other, despite being scattered across the country. We’ll be able to hack in Minecraft together, and do things like hang out and play pool with each other in other VR worlds.&lt;/p&gt;

&lt;p&gt;It’s been a long, exhausting week, but there are very few places I’d rather have been. Bring on week 2!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>